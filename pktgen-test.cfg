#! /bin/sh

#modprobe pktgen
RATE=500000
CARD=eth1
PKTS=10000000

function pgset() {
    local result

    echo $1 > $PGDEV

    result=`cat $PGDEV | fgrep "Result: OK:"`
    if [ "$result" = "" ]; then
         cat $PGDEV | fgrep Result:
    fi
}

function pg() {
    echo inject > $PGDEV
    cat $PGDEV
}

while getopts r:i: opt
 do
  case "$opt" in
    r)		RATE=$OPTARG;;
    i)		CARD=$OPTARG;;
    [?])	print >&2 "Usage: $0 [-r <rate>] [-i <network interface>]"
		exit 1;;
  esac
 done
shift $((OPTIND-1))



# Config Start Here -----------------------------------------------------------


# thread config
# Each CPU has own thread.

PGDEV=/proc/net/pktgen/kpktgend_0
  echo "Removing all devices"
 pgset "rem_device_all" 
  echo "Adding $CARD"
 pgset "add_device $CARD" 
  echo "Setting max_before_softirq 10000"
 pgset "max_before_softirq 10000"
# pgset "max_before_softirq 10000000"


# device config
# delay 0 means maximum speed.

CLONE_SKB="clone_skb 1000000"
#CLONE_SKB="clone_skb 100"
# NIC adds 4 bytes CRC
PKT_SIZE="pkt_size 60"

# COUNT 0 means forever
#COUNT="count 0"
COUNT="count $PKTS"
DELAY="delay 0"

PGDEV=/proc/net/pktgen/$CARD
  echo "Configuring $PGDEV"
 pgset "$COUNT"
#pgset "flag QUEUE_MAP_CPU"
 pgset "$CLONE_SKB"
 pgset "$PKT_SIZE"
 pgset "$DELAY"
 pgset "ratep $RATE"
 pgset "dst 192.168.2.1" 
# pgset "dst_mac  00:1c:23:30:16:45"
# pgset "dst_mac  68:05:ca:02:c7:11"
 pgset "dst_mac  00:16:35:AF:94:40"
# pgset "dst_mac  d4:be:d9:39:5e:db"
# pgset "dst_mac  68:05:CA:02:C7:11"


#PGDEV=/proc/net/pktgen/$CARD@0
#  echo "Configuring $PGDEV"
# pgset "$COUNT"
#pgset "flag QUEUE_MAP_CPU"
# pgset "$CLONE_SKB"
# pgset "$PKT_SIZE"
# pgset "$DELAY"
#pgset "ratep 500000"
# pgset "dst 192.168.2.2" 
# pgset "dst_mac  00:23:ae:8a:c4:36"


# Time to run
PGDEV=/proc/net/pktgen/pgctrl

 echo "Running... ctrl^C to stop"
 pgset "start" 
 echo "Done"

# Result can be vieved in /proc/net/pktgen/$CARD
